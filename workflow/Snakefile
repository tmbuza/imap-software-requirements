from snakemake.utils import min_version

min_version("6.10.0")


# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# Function for aggregating list of raw sequencing files.
mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/raw/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

import csv
import pandas as pd

sraMapping = pd.read_csv('config/samples.csv')
SAMPLES = sraMapping['sample_name'].tolist()

READSDIR="data/reads" 
OUTDIR=READSDIR+"/"



# Master rule for controlling workflow.
rule all:
    input:
        "project_tree.txt",
        "index.html",
        expand("{outdir}{samples}_1.fastq", outdir=OUTDIR, samples=SAMPLES),
        expand("{outdir}{samples}_2.fastq", outdir=OUTDIR, samples=SAMPLES)


# Get directory tree
rule get_project_tree_txt:
	output:
		tree="project_tree.txt"
	shell:
		"tree -L 2 . >{output}"


rule get_rulegraph:
    output:
        "dags/rulegraph.svg",
        "dags/rulegraph.png",
        "dags/dag.svg",
        "dags/dag.png"
    shell:
        "bash workflow/scripts/rules_dag.sh"

rule github_page_index:
    input:
        script="workflow/scripts/render.R",
        rmd="index.Rmd",
        rulegraph="dags/rulegraph.svg",
    output:
        doc="index.html",
    shell:
        """
            R -e "library(rmarkdown); render('{input.rmd}')"
        """

rule interactive_report:
    shell:
        "bash workflow/scripts/interactive_report.sh"


# rule sra:
#     input:
#         expand("{outdir}{samples}_1.fastq", outdir=OUTDIR, samples=SAMPLES),
#         expand("{outdir}{samples}_2.fastq", outdir=OUTDIR, samples=SAMPLES)


rule download_srareads: 
    output:
        "%s{samples}_1.fastq" % OUTDIR,
        "%s{samples}_2.fastq" % OUTDIR
    params:
        download_folder = READSDIR
    shell:
        "fasterq-dump {wildcards.samples} -O {params.download_folder}"
 