from snakemake.utils import min_version

min_version("6.10.0")


# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# Function for aggregating list of raw sequencing files.
mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/raw/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

import os
import csv
import pandas as pd

# Get the SRA Run accessions
ACC_LIST=pd.read_csv('config/SraRunTable.csv')
ACCESSIONS=ACC_LIST['Run'].tolist() # Specify the column containing the accession, in this demo is Run

OUTDIR="data/reads" 
TEMPDIR=OUTDIR+"/temp"

if not os.path.exists(OUTDIR):
   os.makedirs(OUTDIR)
TEMPDIR=OUTDIR+"/temp"

if not os.path.exists(TEMPDIR):
   os.makedirs(TEMPDIR)


###############################################
###############################################


# Master rule for controlling workflow.
rule all:
    input:
        "project_tree.txt",
        "index.html",
        expand("{outdir}/{accession}_1.fastq", outdir=OUTDIR, accession=ACCESSIONS),
        expand("{outdir}/{accession}_2.fastq", outdir=OUTDIR, accession=ACCESSIONS)


# Get directory tree
rule get_project_tree_txt:
	output:
		tree="project_tree.txt"
	shell:
		"tree -L 2 . >{output}"


rule get_rulegraph:
    output:
        "dags/rulegraph.svg",
        "dags/rulegraph.png",
        "dags/dag.svg",
        "dags/dag.png"
    shell:
        "bash workflow/scripts/rules_dag.sh"

rule github_page_index:
    input:
        script="workflow/scripts/render.R",
        rmd="index.Rmd",
        rulegraph="dags/rulegraph.svg",
    output:
        doc="index.html",
    shell:
        """
            R -e "library(rmarkdown); render('{input.rmd}')"
        """

rule interactive_report:
    shell:
        "bash workflow/scripts/interactive_report.sh"



# Dowload the SRA RUN reads
rule download_sra_reads: 
    output:
        "{outdir}/{accession}_1.fastq",
        "{outdir}/{accession}_2.fastq"
    params:
        download_folder=OUTDIR,
        tempfolder=TEMPDIR
    threads: 1
    shell:
        "fasterq-dump {wildcards.accession} -O {params.download_folder} --temp {params.tempfolder} --threads {threads}"
 